{
  "version": 3,
  "sources": ["../src/components/base-component.ts", "../src/components/alice-page.ts", "../src/components/bob-page.ts", "../src/frontend/app.ts"],
  "sourcesContent": ["/**\n * Base Component Class for Web Components\n */\n\nimport type { BaseComponent, ComponentState, EventHandler } from '@/types/components.js';\n\n/**\n * Abstract base class for all Selfie web components\n */\nexport abstract class SelfieBaseComponent extends HTMLElement implements BaseComponent {\n  protected shadow: ShadowRoot;\n  protected state: ComponentState = {};\n  private eventListeners: Map<string, EventHandler[]> = new Map();\n\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n  }\n\n  /**\n   * Component lifecycle: Called when element is added to DOM\n   */\n  connectedCallback(): void {\n    this.render();\n    this.attachEventListeners();\n    this.onMount?.();\n  }\n\n  /**\n   * Component lifecycle: Called when element is removed from DOM\n   */\n  disconnectedCallback(): void {\n    this.removeEventListeners();\n    this.onUnmount?.();\n  }\n\n  /**\n   * Component lifecycle: Called when attributes change\n   */\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n    if (oldValue !== newValue) {\n      this.onAttributeChange?.(name, oldValue, newValue);\n      this.render();\n    }\n  }\n\n  /**\n   * Abstract method: Each component must implement its own render logic\n   */\n  abstract render(): void;\n\n  /**\n   * Update component state and trigger re-render\n   */\n  protected setState(newState: Partial<ComponentState>): void {\n    const oldState = { ...this.state };\n    this.state = { ...this.state, ...newState };\n    this.onStateChange?.(this.state, oldState);\n    this.render();\n  }\n\n  /**\n   * Get current component state\n   */\n  protected getState(): Readonly<ComponentState> {\n    return { ...this.state };\n  }\n\n  /**\n   * Add event listener with automatic cleanup\n   */\n  protected addEventListener<K extends keyof HTMLElementEventMap>(\n    type: K,\n    handler: EventHandler<HTMLElementEventMap[K]>,\n    selector?: string\n  ): void {\n    const wrappedHandler = (event: HTMLElementEventMap[K]) => {\n      if (selector) {\n        const target = event.target as HTMLElement;\n        if (target.matches && target.matches(selector)) {\n          handler(event);\n        }\n      } else {\n        handler(event);\n      }\n    };\n\n    const handlers = this.eventListeners.get(type) || [];\n    handlers.push(wrappedHandler as EventHandler);\n    this.eventListeners.set(type, handlers);\n\n    this.shadow.addEventListener(type, wrappedHandler as EventListener);\n  }\n\n  /**\n   * Remove all event listeners\n   */\n  private removeEventListeners(): void {\n    for (const [type, handlers] of this.eventListeners) {\n      handlers.forEach(handler => {\n        this.shadow.removeEventListener(type, handler as EventListener);\n      });\n    }\n    this.eventListeners.clear();\n  }\n\n  /**\n   * Attach component-specific event listeners\n   */\n  protected attachEventListeners(): void {\n    // Override in subclasses to add specific event listeners\n  }\n\n  /**\n   * Create and return styled template\n   */\n  protected createTemplate(html: string, css: string = ''): DocumentFragment {\n    const template = document.createElement('template');\n    template.innerHTML = `\n      ${css ? `<style>${css}</style>` : ''}\n      ${html}\n    `;\n    return template.content.cloneNode(true) as DocumentFragment;\n  }\n\n  /**\n   * Query element in shadow DOM\n   */\n  protected querySelector<T extends HTMLElement>(selector: string): T | null {\n    return this.shadow.querySelector(selector) as T | null;\n  }\n\n  /**\n   * Query all elements in shadow DOM\n   */\n  protected querySelectorAll<T extends HTMLElement>(selector: string): NodeListOf<T> {\n    return this.shadow.querySelectorAll(selector) as NodeListOf<T>;\n  }\n\n  /**\n   * Emit custom event\n   */\n  protected emit(eventName: string, detail?: unknown): void {\n    const event = new CustomEvent(eventName, {\n      detail,\n      bubbles: true,\n      composed: true,\n    });\n    this.dispatchEvent(event);\n  }\n\n  // Optional lifecycle hooks\n  protected onMount?(): void | Promise<void>;\n  protected onUnmount?(): void | Promise<void>;\n  protected onStateChange?(newState: ComponentState, oldState: ComponentState): void | Promise<void>;\n  protected onAttributeChange?(name: string, oldValue: string | null, newValue: string | null): void;\n}", "/**\n * Alice Page Component\n * \n * Dashboard interface for Alice's interactions with Selfie agents\n */\n\nimport { SelfieBaseComponent } from './base-component.js';\nimport type { AgentsStatusResponse, HealthResponse } from '@/types/api.js';\nimport type { StatusCardConfig } from '@/types/components.js';\n\ninterface AlicePageState {\n  visible: boolean;\n  systemHealth?: HealthResponse;\n  agentStatus?: AgentsStatusResponse;\n  loading: boolean;\n  error?: string;\n}\n\nexport class AlicePageComponent extends SelfieBaseComponent {\n  static observedAttributes = ['visible'];\n\n  private refreshInterval?: number;\n\n  constructor() {\n    super();\n    this.setState({\n      visible: true,\n      loading: true,\n    });\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.startDataRefresh();\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.stopDataRefresh();\n  }\n\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n    if (name === 'visible') {\n      this.setState({ visible: newValue === 'true' });\n    }\n    super.attributeChangedCallback(name, oldValue, newValue);\n  }\n\n  render(): void {\n    const state = this.getState() as AlicePageState;\n\n    if (!state.visible) {\n      this.style.display = 'none';\n      return;\n    }\n\n    this.style.display = 'block';\n    \n    const template = this.createTemplate(\n      this.getHtmlTemplate(state),\n      this.getCssStyles()\n    );\n\n    this.shadow.innerHTML = '';\n    this.shadow.appendChild(template);\n  }\n\n  protected attachEventListeners(): void {\n    this.addEventListener('click', this.handleNavigation, '[data-action=\"navigate-to-bob\"]');\n    this.addEventListener('click', this.handleRefresh, '[data-action=\"refresh\"]');\n  }\n\n  private getHtmlTemplate(state: AlicePageState): string {\n    return `\n      <div class=\"page\" data-testid=\"alice-page\">\n        <h1>\uD83D\uDC69\u200D\uD83D\uDCBB Alice's Dashboard</h1>\n        <p>Welcome to Alice's interface! Monitor and manage Selfie agent activities from here.</p>\n        \n        ${this.getStatusCardsHtml(state)}\n        \n        <button \n          class=\"nav-button\" \n          data-testid=\"go-to-bob-button\" \n          data-action=\"navigate-to-bob\"\n        >\n          \uD83D\uDE80 Switch to Bob's Coordination Center\n        </button>\n        \n        <button \n          class=\"refresh-button\" \n          data-action=\"refresh\"\n          ${state.loading ? 'disabled' : ''}\n        >\n          ${state.loading ? '\u27F3 Refreshing...' : '\uD83D\uDD04 Refresh Data'}\n        </button>\n        \n        <div class=\"features\">\n          <h3>Alice's Capabilities</h3>\n          <ul>\n            <li>\uD83D\uDCCA Monitor Selfie agent status and health</li>\n            <li>\uD83C\uDFAF Create and track development tasks</li>\n            <li>\uD83D\uDD0C View active MCP server connections</li>\n            <li>\uD83D\uDCDD Manage GitHub issue integration</li>\n            <li>\uD83D\uDD0D Real-time system monitoring</li>\n          </ul>\n        </div>\n      </div>\n    `;\n  }\n\n  private getStatusCardsHtml(state: AlicePageState): string {\n    if (state.loading && !state.systemHealth) {\n      return `\n        <div class=\"status-card loading\">\n          <h4>\uD83D\uDD04 Loading System Status</h4>\n          <p><span class=\"loading-spinner\"></span>Fetching system information...</p>\n        </div>\n      `;\n    }\n\n    if (state.error) {\n      return `\n        <div class=\"status-card error\">\n          <h4>\u274C Error</h4>\n          <p>${state.error}</p>\n        </div>\n      `;\n    }\n\n    const systemCard = this.getSystemHealthCardHtml(state.systemHealth);\n    const agentCard = this.getAgentStatusCardHtml(state.agentStatus);\n\n    return `${systemCard}${agentCard}`;\n  }\n\n  private getSystemHealthCardHtml(health?: HealthResponse): string {\n    if (!health) return '';\n\n    const statusIcon = health.status === 'healthy' ? '\u2705' : '\u26A0\uFE0F';\n    const statusClass = health.status === 'healthy' ? 'success' : 'warning';\n\n    return `\n      <div class=\"status-card ${statusClass}\">\n        <h4>\uD83D\uDD17 System Health</h4>\n        <p>${statusIcon} ${health.service} v${health.version} - ${health.status}</p>\n        <small>Last checked: ${new Date(health.timestamp).toLocaleTimeString()}</small>\n      </div>\n    `;\n  }\n\n  private getAgentStatusCardHtml(agents?: AgentsStatusResponse): string {\n    if (!agents) return '';\n\n    const activeCount = agents.agents.filter(a => a.status !== 'idle' && a.status !== 'offline').length;\n    const statusIcon = activeCount > 0 ? '\uD83D\uDFE2' : '\uD83D\uDFE1';\n\n    return `\n      <div class=\"status-card\">\n        <h4>\uD83E\uDD16 Agent Status</h4>\n        <p>${statusIcon} ${activeCount}/${agents.totalAgents} agents active, ${agents.activeConnections} MCP connections</p>\n        <div class=\"agent-summary\">\n          ${agents.agents.map(agent => `\n            <span class=\"agent-badge ${agent.status}\">\n              ${this.getAgentEmoji(agent.name)} ${agent.name}\n            </span>\n          `).join('')}\n        </div>\n        <small>Last updated: ${new Date(agents.lastUpdate).toLocaleTimeString()}</small>\n      </div>\n    `;\n  }\n\n  private getAgentEmoji(agentName: string): string {\n    const emojis: Record<string, string> = {\n      initializer: '\uD83D\uDD0D',\n      developer: '\uD83D\uDC68\u200D\uD83D\uDCBB',\n      reviewer: '\uD83D\uDD0D',\n      tester: '\uD83E\uDDEA',\n    };\n    return emojis[agentName] || '\uD83E\uDD16';\n  }\n\n  private getCssStyles(): string {\n    return `\n      :host {\n        display: block;\n        animation: fadeIn 0.3s ease-in;\n      }\n      \n      :host(.hidden) {\n        display: none;\n      }\n      \n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      \n      .page {\n        font-family: inherit;\n      }\n      \n      .nav-button, .refresh-button {\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n        border: none;\n        padding: 12px 24px;\n        margin: 10px 5px;\n        border-radius: 8px;\n        cursor: pointer;\n        font-size: 16px;\n        font-weight: 600;\n        transition: all 0.3s ease;\n        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n      }\n      \n      .nav-button:hover, .refresh-button:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);\n      }\n      \n      .refresh-button:disabled {\n        opacity: 0.6;\n        cursor: not-allowed;\n        transform: none;\n      }\n      \n      h1 {\n        color: #333;\n        border-bottom: 3px solid #667eea;\n        padding-bottom: 15px;\n        font-size: 2rem;\n      }\n      \n      .status-card {\n        background: linear-gradient(135deg, #e3f2fd 0%, #bbdefb 100%);\n        border-left: 5px solid #2196f3;\n        padding: 20px;\n        margin: 25px 0;\n        border-radius: 8px;\n        box-shadow: 0 2px 10px rgba(33, 150, 243, 0.1);\n        transition: all 0.3s ease;\n      }\n      \n      .status-card.success {\n        background: linear-gradient(135deg, #e8f5e8 0%, #c8e6c9 100%);\n        border-left-color: #4caf50;\n      }\n      \n      .status-card.warning {\n        background: linear-gradient(135deg, #fff3e0 0%, #ffcc02 100%);\n        border-left-color: #ff9800;\n      }\n      \n      .status-card.error {\n        background: linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%);\n        border-left-color: #f44336;\n      }\n      \n      .status-card.loading {\n        background: linear-gradient(135deg, #f5f5f5 0%, #e0e0e0 100%);\n        border-left-color: #9e9e9e;\n      }\n      \n      .status-card h4 {\n        margin: 0 0 10px 0;\n        color: #1976d2;\n        font-size: 1.1rem;\n      }\n      \n      .agent-summary {\n        margin: 10px 0;\n        display: flex;\n        flex-wrap: wrap;\n        gap: 5px;\n      }\n      \n      .agent-badge {\n        display: inline-block;\n        padding: 4px 8px;\n        border-radius: 12px;\n        font-size: 0.8rem;\n        font-weight: 500;\n        background: rgba(255, 255, 255, 0.8);\n      }\n      \n      .agent-badge.monitoring {\n        border: 2px solid #ffc107;\n        color: #f57c00;\n      }\n      \n      .agent-badge.available {\n        border: 2px solid #4caf50;\n        color: #2e7d32;\n      }\n      \n      .agent-badge.idle, .agent-badge.offline {\n        border: 2px solid #9e9e9e;\n        color: #616161;\n      }\n      \n      .loading-spinner {\n        display: inline-block;\n        width: 12px;\n        height: 12px;\n        border: 2px solid #f3f3f3;\n        border-top: 2px solid #667eea;\n        border-radius: 50%;\n        animation: spin 1s linear infinite;\n        margin-right: 8px;\n      }\n      \n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n      \n      .features {\n        margin-top: 30px;\n      }\n      \n      .features h3 {\n        color: #555;\n        font-size: 1.3rem;\n      }\n      \n      .features ul {\n        list-style: none;\n        padding: 0;\n      }\n      \n      .features li {\n        margin: 12px 0;\n        padding: 12px 15px;\n        background: #f8f9fa;\n        border-radius: 8px;\n        border-left: 4px solid #667eea;\n        transition: all 0.2s ease;\n      }\n      \n      .features li:hover {\n        background: #e9ecef;\n        transform: translateX(5px);\n      }\n      \n      small {\n        color: #666;\n        font-size: 0.85rem;\n      }\n    `;\n  }\n\n  private handleNavigation = (): void => {\n    this.setState({ visible: false });\n    this.emit('navigate', { page: 'bob' });\n    \n    // Update URL\n    history.pushState(null, '', '/bob');\n  };\n\n  private handleRefresh = async (): Promise<void> => {\n    this.setState({ loading: true, error: undefined });\n    await this.fetchData();\n  };\n\n  private startDataRefresh(): void {\n    this.fetchData();\n    this.refreshInterval = window.setInterval(() => {\n      this.fetchData();\n    }, 30000); // Refresh every 30 seconds\n  }\n\n  private stopDataRefresh(): void {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n      this.refreshInterval = undefined;\n    }\n  }\n\n  private async fetchData(): Promise<void> {\n    try {\n      const [healthResponse, agentsResponse] = await Promise.all([\n        fetch('/api/health'),\n        fetch('/api/agents/status'),\n      ]);\n\n      if (healthResponse.ok && agentsResponse.ok) {\n        const healthData = await healthResponse.json();\n        const agentsData = await agentsResponse.json();\n\n        this.setState({\n          systemHealth: healthData.data,\n          agentStatus: agentsData.data,\n          loading: false,\n          error: undefined,\n        });\n      } else {\n        throw new Error('Failed to fetch data');\n      }\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      });\n    }\n  }\n}\n\n// Define the custom element\ncustomElements.define('alice-page', AlicePageComponent);", "/**\n * Bob Page Component\n * \n * Coordination center interface for managing multiple Selfie agents\n */\n\nimport { SelfieBaseComponent } from './base-component.js';\nimport type { AgentsStatusResponse, AgentStatus } from '@/types/api.js';\nimport type { AgentCardData } from '@/types/components.js';\n\ninterface BobPageState {\n  visible: boolean;\n  agentStatus?: AgentsStatusResponse;\n  loading: boolean;\n  error?: string;\n  selectedAgent?: string;\n}\n\nexport class BobPageComponent extends SelfieBaseComponent {\n  static observedAttributes = ['visible'];\n\n  private refreshInterval?: number;\n\n  constructor() {\n    super();\n    this.setState({\n      visible: false,\n      loading: true,\n    });\n  }\n\n  connectedCallback(): void {\n    super.connectedCallback();\n    this.startDataRefresh();\n  }\n\n  disconnectedCallback(): void {\n    super.disconnectedCallback();\n    this.stopDataRefresh();\n  }\n\n  attributeChangedCallback(name: string, oldValue: string | null, newValue: string | null): void {\n    if (name === 'visible') {\n      this.setState({ visible: newValue === 'true' });\n    }\n    super.attributeChangedCallback(name, oldValue, newValue);\n  }\n\n  render(): void {\n    const state = this.getState() as BobPageState;\n\n    if (!state.visible) {\n      this.style.display = 'none';\n      return;\n    }\n\n    this.style.display = 'block';\n    \n    const template = this.createTemplate(\n      this.getHtmlTemplate(state),\n      this.getCssStyles()\n    );\n\n    this.shadow.innerHTML = '';\n    this.shadow.appendChild(template);\n  }\n\n  protected attachEventListeners(): void {\n    this.addEventListener('click', this.handleNavigation, '[data-action=\"navigate-to-alice\"]');\n    this.addEventListener('click', this.handleRefresh, '[data-action=\"refresh\"]');\n    this.addEventListener('click', this.handleAgentSelect, '[data-agent-name]');\n  }\n\n  private getHtmlTemplate(state: BobPageState): string {\n    return `\n      <div class=\"page\" data-testid=\"bob-page\">\n        <h1>\uD83E\uDDE0 Bob's Coordination Center</h1>\n        <p>Orchestrate and monitor the entire Selfie ecosystem from this central command interface.</p>\n        \n        ${this.getCoordinationPanelHtml(state)}\n        \n        <div class=\"action-buttons\">\n          <button \n            class=\"nav-button\" \n            data-testid=\"go-to-alice-button\" \n            data-action=\"navigate-to-alice\"\n          >\n            \uD83D\uDC69\u200D\uD83D\uDCBB Switch to Alice's Dashboard\n          </button>\n          \n          <button \n            class=\"refresh-button\" \n            data-action=\"refresh\"\n            ${state.loading ? 'disabled' : ''}\n          >\n            ${state.loading ? '\u27F3 Refreshing...' : '\uD83D\uDD04 Refresh Agents'}\n          </button>\n        </div>\n        \n        <div class=\"features\">\n          <h3>Bob's Control Systems</h3>\n          <ul>\n            <li>\uD83C\uDF9B\uFE0F Coordinate multiple Selfie instances across networks</li>\n            <li>\uD83D\uDCCB Review and approve automated pull requests</li>\n            <li>\uD83D\uDCCA Monitor development task queues and priorities</li>\n            <li>\uD83D\uDD04 Manage system health and performance metrics</li>\n            <li>\uD83C\uDF10 Oversee MCP server coordination protocols</li>\n          </ul>\n        </div>\n      </div>\n    `;\n  }\n\n  private getCoordinationPanelHtml(state: BobPageState): string {\n    if (state.loading && !state.agentStatus) {\n      return `\n        <div class=\"coordination-panel\">\n          <h4>\uD83E\uDD16 Agent Coordination Dashboard</h4>\n          <div class=\"loading-state\">\n            <span class=\"loading-spinner\"></span>\n            <p>Loading agent information...</p>\n          </div>\n        </div>\n      `;\n    }\n\n    if (state.error) {\n      return `\n        <div class=\"coordination-panel error\">\n          <h4>\u274C Coordination Error</h4>\n          <p>${state.error}</p>\n        </div>\n      `;\n    }\n\n    if (!state.agentStatus) {\n      return `\n        <div class=\"coordination-panel\">\n          <h4>\uD83E\uDD16 Agent Coordination Dashboard</h4>\n          <p>No agent data available.</p>\n        </div>\n      `;\n    }\n\n    return `\n      <div class=\"coordination-panel\">\n        <h4>\uD83E\uDD16 Agent Coordination Dashboard</h4>\n        <div class=\"coordination-summary\">\n          <div class=\"summary-stat\">\n            <span class=\"stat-number\">${state.agentStatus.totalAgents}</span>\n            <span class=\"stat-label\">Total Agents</span>\n          </div>\n          <div class=\"summary-stat\">\n            <span class=\"stat-number\">${state.agentStatus.activeConnections}</span>\n            <span class=\"stat-label\">Active Connections</span>\n          </div>\n          <div class=\"summary-stat\">\n            <span class=\"stat-number\">${this.getActiveAgentCount(state.agentStatus.agents)}</span>\n            <span class=\"stat-label\">Working Agents</span>\n          </div>\n        </div>\n        \n        <div class=\"agent-grid\">\n          ${state.agentStatus.agents.map(agent => this.getAgentCardHtml(agent, state.selectedAgent)).join('')}\n        </div>\n        \n        <small>Last updated: ${new Date(state.agentStatus.lastUpdate).toLocaleTimeString()}</small>\n      </div>\n    `;\n  }\n\n  private getAgentCardHtml(agent: AgentStatus, selectedAgent?: string): string {\n    const isSelected = selectedAgent === agent.name;\n    const statusIcon = this.getStatusIcon(agent.status);\n    const agentEmoji = this.getAgentEmoji(agent.name);\n\n    return `\n      <div \n        class=\"agent-card ${agent.status} ${isSelected ? 'selected' : ''}\"\n        data-agent-name=\"${agent.name}\"\n        role=\"button\"\n        tabindex=\"0\"\n      >\n        <div class=\"agent-header\">\n          <strong>${agentEmoji} ${this.capitalize(agent.name)} Agent</strong>\n          <span class=\"status-indicator\">\n            <span class=\"status-icon\">${statusIcon}</span>\n            ${this.capitalize(agent.status)}\n          </span>\n        </div>\n        \n        <div class=\"agent-details\">\n          <p><strong>Last Seen:</strong> ${this.formatRelativeTime(agent.lastSeen)}</p>\n          \n          ${agent.currentTask ? `\n            <p><strong>Current Task:</strong> ${agent.currentTask}</p>\n          ` : ''}\n          \n          ${agent.capabilities ? `\n            <div class=\"capabilities\">\n              <strong>Capabilities:</strong>\n              ${agent.capabilities.map(cap => `<span class=\"capability-tag\">${cap}</span>`).join('')}\n            </div>\n          ` : ''}\n          \n          ${agent.metadata ? this.getMetadataHtml(agent.metadata) : ''}\n        </div>\n      </div>\n    `;\n  }\n\n  private getMetadataHtml(metadata: Record<string, unknown>): string {\n    const relevantKeys = Object.keys(metadata).slice(0, 3); // Show up to 3 metadata items\n    \n    if (relevantKeys.length === 0) return '';\n\n    return `\n      <div class=\"metadata\">\n        ${relevantKeys.map(key => `\n          <div class=\"metadata-item\">\n            <span class=\"metadata-key\">${this.formatMetadataKey(key)}:</span>\n            <span class=\"metadata-value\">${this.formatMetadataValue(metadata[key])}</span>\n          </div>\n        `).join('')}\n      </div>\n    `;\n  }\n\n  private getStatusIcon(status: string): string {\n    const icons: Record<string, string> = {\n      monitoring: '\uD83D\uDFE1',\n      available: '\uD83D\uDFE2',\n      busy: '\uD83D\uDD34',\n      idle: '\u26AA',\n      offline: '\u26AB',\n    };\n    return icons[status] || '\u2753';\n  }\n\n  private getAgentEmoji(agentName: string): string {\n    const emojis: Record<string, string> = {\n      initializer: '\uD83D\uDD0D',\n      developer: '\uD83D\uDC68\u200D\uD83D\uDCBB',\n      reviewer: '\uD83D\uDCCB',\n      tester: '\uD83E\uDDEA',\n    };\n    return emojis[agentName] || '\uD83E\uDD16';\n  }\n\n  private getActiveAgentCount(agents: readonly AgentStatus[]): number {\n    return agents.filter(agent => \n      agent.status === 'monitoring' || agent.status === 'busy'\n    ).length;\n  }\n\n  private capitalize(str: string): string {\n    return str.charAt(0).toUpperCase() + str.slice(1);\n  }\n\n  private formatRelativeTime(timestamp: string): string {\n    const now = new Date();\n    const then = new Date(timestamp);\n    const diffMs = now.getTime() - then.getTime();\n    const diffMins = Math.floor(diffMs / 60000);\n\n    if (diffMins < 1) return 'Just now';\n    if (diffMins < 60) return `${diffMins} min ago`;\n    \n    const diffHours = Math.floor(diffMins / 60);\n    if (diffHours < 24) return `${diffHours}h ago`;\n    \n    const diffDays = Math.floor(diffHours / 24);\n    return `${diffDays}d ago`;\n  }\n\n  private formatMetadataKey(key: string): string {\n    return key.replace(/([A-Z])/g, ' $1').replace(/^./, str => str.toUpperCase());\n  }\n\n  private formatMetadataValue(value: unknown): string {\n    if (typeof value === 'string') return value;\n    if (typeof value === 'number') return value.toString();\n    if (value instanceof Date) return value.toLocaleString();\n    return JSON.stringify(value);\n  }\n\n  private getCssStyles(): string {\n    return `\n      :host {\n        display: block;\n        animation: fadeIn 0.3s ease-in;\n      }\n      \n      :host(.hidden) {\n        display: none;\n      }\n      \n      @keyframes fadeIn {\n        from { opacity: 0; transform: translateY(10px); }\n        to { opacity: 1; transform: translateY(0); }\n      }\n      \n      .page {\n        font-family: inherit;\n      }\n      \n      h1 {\n        color: #333;\n        border-bottom: 3px solid #667eea;\n        padding-bottom: 15px;\n        font-size: 2rem;\n      }\n      \n      .coordination-panel {\n        background: linear-gradient(135deg, #f8f9fa 0%, #e9ecef 100%);\n        border: 1px solid #dee2e6;\n        border-radius: 12px;\n        padding: 25px;\n        margin: 25px 0;\n      }\n      \n      .coordination-panel.error {\n        background: linear-gradient(135deg, #ffebee 0%, #ffcdd2 100%);\n        border-color: #f44336;\n      }\n      \n      .coordination-panel h4 {\n        margin: 0 0 20px 0;\n        color: #333;\n        font-size: 1.3rem;\n      }\n      \n      .coordination-summary {\n        display: flex;\n        gap: 30px;\n        margin-bottom: 30px;\n        justify-content: center;\n      }\n      \n      .summary-stat {\n        text-align: center;\n        padding: 15px;\n        background: white;\n        border-radius: 8px;\n        box-shadow: 0 2px 5px rgba(0,0,0,0.1);\n        min-width: 100px;\n      }\n      \n      .stat-number {\n        display: block;\n        font-size: 2rem;\n        font-weight: bold;\n        color: #667eea;\n        margin-bottom: 5px;\n      }\n      \n      .stat-label {\n        display: block;\n        font-size: 0.9rem;\n        color: #666;\n        text-transform: uppercase;\n        letter-spacing: 0.5px;\n      }\n      \n      .agent-grid {\n        display: grid;\n        grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));\n        gap: 20px;\n        margin: 20px 0;\n      }\n      \n      .agent-card {\n        background: white;\n        padding: 20px;\n        border-radius: 10px;\n        box-shadow: 0 3px 15px rgba(0,0,0,0.1);\n        transition: all 0.3s ease;\n        border-left: 5px solid #28a745;\n        cursor: pointer;\n      }\n      \n      .agent-card:hover {\n        transform: translateY(-3px);\n        box-shadow: 0 6px 25px rgba(0,0,0,0.15);\n      }\n      \n      .agent-card.selected {\n        border-left-color: #667eea;\n        box-shadow: 0 0 0 2px rgba(102, 126, 234, 0.3);\n      }\n      \n      .agent-card.monitoring {\n        border-left-color: #ffc107;\n      }\n      \n      .agent-card.available {\n        border-left-color: #28a745;\n      }\n      \n      .agent-card.busy {\n        border-left-color: #dc3545;\n      }\n      \n      .agent-card.idle, .agent-card.offline {\n        border-left-color: #6c757d;\n      }\n      \n      .agent-header {\n        display: flex;\n        justify-content: space-between;\n        align-items: center;\n        margin-bottom: 15px;\n      }\n      \n      .agent-header strong {\n        font-size: 1.1rem;\n        color: #333;\n      }\n      \n      .status-indicator {\n        display: flex;\n        align-items: center;\n        gap: 5px;\n        font-size: 0.9rem;\n        font-weight: 500;\n      }\n      \n      .agent-details p {\n        margin: 8px 0;\n        font-size: 0.9rem;\n        color: #555;\n      }\n      \n      .capabilities {\n        margin: 10px 0;\n      }\n      \n      .capability-tag {\n        display: inline-block;\n        background: #e9ecef;\n        color: #495057;\n        padding: 3px 8px;\n        border-radius: 12px;\n        font-size: 0.75rem;\n        margin: 2px;\n        font-weight: 500;\n      }\n      \n      .metadata {\n        margin-top: 10px;\n        padding-top: 10px;\n        border-top: 1px solid #eee;\n      }\n      \n      .metadata-item {\n        display: flex;\n        justify-content: space-between;\n        margin: 5px 0;\n        font-size: 0.85rem;\n      }\n      \n      .metadata-key {\n        color: #666;\n        font-weight: 500;\n      }\n      \n      .metadata-value {\n        color: #333;\n      }\n      \n      .action-buttons {\n        display: flex;\n        gap: 10px;\n        flex-wrap: wrap;\n        margin: 20px 0;\n      }\n      \n      .nav-button, .refresh-button {\n        background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);\n        color: white;\n        border: none;\n        padding: 12px 24px;\n        border-radius: 8px;\n        cursor: pointer;\n        font-size: 16px;\n        font-weight: 600;\n        transition: all 0.3s ease;\n        box-shadow: 0 4px 15px rgba(102, 126, 234, 0.3);\n      }\n      \n      .nav-button:hover, .refresh-button:hover {\n        transform: translateY(-2px);\n        box-shadow: 0 6px 20px rgba(102, 126, 234, 0.4);\n      }\n      \n      .refresh-button:disabled {\n        opacity: 0.6;\n        cursor: not-allowed;\n        transform: none;\n      }\n      \n      .loading-state {\n        text-align: center;\n        padding: 40px;\n      }\n      \n      .loading-spinner {\n        display: inline-block;\n        width: 20px;\n        height: 20px;\n        border: 3px solid #f3f3f3;\n        border-top: 3px solid #667eea;\n        border-radius: 50%;\n        animation: spin 1s linear infinite;\n        margin-right: 10px;\n      }\n      \n      @keyframes spin {\n        0% { transform: rotate(0deg); }\n        100% { transform: rotate(360deg); }\n      }\n      \n      .features {\n        margin-top: 30px;\n      }\n      \n      .features h3 {\n        color: #555;\n        font-size: 1.3rem;\n      }\n      \n      .features ul {\n        list-style: none;\n        padding: 0;\n      }\n      \n      .features li {\n        margin: 12px 0;\n        padding: 12px 15px;\n        background: #f8f9fa;\n        border-radius: 8px;\n        border-left: 4px solid #667eea;\n        transition: all 0.2s ease;\n      }\n      \n      .features li:hover {\n        background: #e9ecef;\n        transform: translateX(5px);\n      }\n      \n      small {\n        color: #666;\n        font-size: 0.85rem;\n        font-style: italic;\n      }\n    `;\n  }\n\n  private handleNavigation = (): void => {\n    this.setState({ visible: false });\n    this.emit('navigate', { page: 'alice' });\n    \n    // Update URL\n    history.pushState(null, '', '/');\n  };\n\n  private handleRefresh = async (): Promise<void> => {\n    this.setState({ loading: true, error: undefined });\n    await this.fetchData();\n  };\n\n  private handleAgentSelect = (event: Event): void => {\n    const target = event.target as HTMLElement;\n    const agentName = target.closest('[data-agent-name]')?.getAttribute('data-agent-name');\n    \n    if (agentName) {\n      const currentSelected = this.getState().selectedAgent;\n      this.setState({ \n        selectedAgent: currentSelected === agentName ? undefined : agentName \n      });\n      \n      this.emit('agent-selected', { agentName });\n    }\n  };\n\n  private startDataRefresh(): void {\n    this.fetchData();\n    this.refreshInterval = window.setInterval(() => {\n      this.fetchData();\n    }, 30000); // Refresh every 30 seconds\n  }\n\n  private stopDataRefresh(): void {\n    if (this.refreshInterval) {\n      clearInterval(this.refreshInterval);\n      this.refreshInterval = undefined;\n    }\n  }\n\n  private async fetchData(): Promise<void> {\n    try {\n      const response = await fetch('/api/agents/status');\n\n      if (response.ok) {\n        const data = await response.json();\n        this.setState({\n          agentStatus: data.data,\n          loading: false,\n          error: undefined,\n        });\n      } else {\n        throw new Error('Failed to fetch agent data');\n      }\n    } catch (error) {\n      this.setState({\n        loading: false,\n        error: error instanceof Error ? error.message : 'Unknown error occurred',\n      });\n    }\n  }\n}\n\n// Define the custom element\ncustomElements.define('bob-page', BobPageComponent);", "\n/**\n * Frontend Application Entry Point\n * \n * This file imports and initializes all TypeScript components\n * for the Selfie Frontend application.\n */\n\n// Import all components to register them as custom elements\nimport '../components/alice-page.js';\nimport '../components/bob-page.js';\n\n// Initialize application\nclass SelfieApp {\n  private currentPage: 'alice' | 'bob' = 'alice';\n\n  constructor() {\n    this.initializeRouting();\n    this.initializeNavigation();\n    this.setupGlobalErrorHandling();\n  }\n\n  private initializeRouting(): void {\n    // Handle initial route\n    this.handleRoute();\n    \n    // Handle browser navigation\n    window.addEventListener('popstate', () => this.handleRoute());\n  }\n\n  private handleRoute(): void {\n    const path = window.location.pathname;\n    const alicePage = document.querySelector('alice-page');\n    const bobPage = document.querySelector('bob-page');\n\n    if (path === '/bob' || path.includes('bob')) {\n      this.currentPage = 'bob';\n      alicePage?.setAttribute('visible', 'false');\n      bobPage?.setAttribute('visible', 'true');\n    } else {\n      this.currentPage = 'alice';\n      alicePage?.setAttribute('visible', 'true');\n      bobPage?.setAttribute('visible', 'false');\n    }\n  }\n\n  private initializeNavigation(): void {\n    // Listen for navigation events from components\n    document.addEventListener('navigate', (event) => {\n      const detail = (event as CustomEvent).detail;\n      if (detail?.page) {\n        this.navigateTo(detail.page);\n      }\n    });\n  }\n\n  private navigateTo(page: 'alice' | 'bob'): void {\n    const url = page === 'alice' ? '/' : '/bob';\n    history.pushState(null, '', url);\n    this.handleRoute();\n  }\n\n  private setupGlobalErrorHandling(): void {\n    window.addEventListener('error', (event) => {\n      console.error('Global error:', event.error);\n    });\n\n    window.addEventListener('unhandledrejection', (event) => {\n      console.error('Unhandled promise rejection:', event.reason);\n    });\n  }\n}\n\n// Initialize the application when DOM is ready\nif (document.readyState === 'loading') {\n  document.addEventListener('DOMContentLoaded', () => {\n    new SelfieApp();\n  });\n} else {\n  new SelfieApp();\n}\n\n// Export for potential use\nexport default SelfieApp;\n"],
  "mappings": "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",
  "names": []
}
